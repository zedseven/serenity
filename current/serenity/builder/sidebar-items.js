initSidebarItems({"enum":[["ParseValue",""]],"struct":[["AddMember","A builder to add parameters when using `GuildId::add_member`."],["CreateActionRow","A builder for creating an `ActionRow`."],["CreateAllowedMentions","A builder to manage the allowed mentions on a message, used by the `ChannelId::send_message` and `ChannelId::edit_message` methods."],["CreateApplicationCommand","A builder for creating a new `ApplicationCommand`."],["CreateApplicationCommandOption","A builder for creating a new `ApplicationCommandOption`."],["CreateApplicationCommandPermissionData","A builder for creating an `ApplicationCommandPermissionData`."],["CreateApplicationCommandPermissions","A builder for creating an `ApplicationCommandPermission`."],["CreateApplicationCommandPermissionsData","A builder for creating several `ApplicationCommandPermissionData`."],["CreateApplicationCommands",""],["CreateApplicationCommandsPermissions","A builder for creating several `ApplicationCommandPermission`."],["CreateAutocompleteResponse",""],["CreateBotAuthParameters","A builder for constructing an invite link with custom OAuth2 scopes."],["CreateButton","A builder for creating a `Button`."],["CreateChannel","A builder for creating a new `GuildChannel` in a `Guild`."],["CreateComponents","A builder for creating several `ActionRow`s."],["CreateEmbed","A builder to create a fake `Embed` object, for use with the `ChannelId::send_message` and `ExecuteWebhook::embeds` methods."],["CreateEmbedAuthor","A builder to create a fake `Embed` object’s author, for use with the [`CreateEmbed::author`] method."],["CreateEmbedFooter","A builder to create a fake `Embed` object’s footer, for use with the [`CreateEmbed::footer`] method."],["CreateInputText","A builder for creating an `InputText`."],["CreateInteractionResponse",""],["CreateInteractionResponseData",""],["CreateInteractionResponseFollowup",""],["CreateInvite","A builder to create a `RichInvite` for use via `GuildChannel::create_invite`."],["CreateMessage","A builder to specify the contents of an `Http::send_message` request, primarily meant for use through `ChannelId::send_message`."],["CreateSelectMenu","A builder for creating a `SelectMenu`."],["CreateSelectMenuOption","A builder for creating a `SelectMenuOption`."],["CreateSelectMenuOptions","A builder for creating several `SelectMenuOption`."],["CreateStageInstance","Creates a `StageInstance`."],["CreateThread",""],["EditChannel","A builder to edit a `GuildChannel` for use via `GuildChannel::edit`"],["EditGuild","A builder to optionally edit certain fields of a `Guild`. This is meant for usage with `Guild::edit`."],["EditGuildWelcomeScreen","A builder to specify the fields to edit in a `GuildWelcomeScreen`."],["EditGuildWidget","A builder to specify the fields to edit in a `GuildWidget`."],["EditInteractionResponse",""],["EditMember","A builder which edits the properties of a `Member`, to be used in conjunction with `Member::edit`."],["EditMessage","A builder to specify the fields to edit in an existing message."],["EditProfile","A builder to edit the current user’s settings, to be used in conjunction with `CurrentUser::edit`."],["EditRole","A builder to create or edit a [`Role`] for use via a number of model methods."],["EditStageInstance","Edits a `StageInstance`."],["EditThread",""],["EditVoiceState","A builder which edits a user’s voice state, to be used in conjunction with `GuildChannel::edit_voice_state`."],["EditWebhookMessage","A builder to specify the fields to edit in an existing `Webhook`’s message."],["ExecuteWebhook","A builder to create the inner content of a `Webhook`’s execution."],["GetMessages","Builds a request to the API to retrieve messages."],["Timestamp",""]]});